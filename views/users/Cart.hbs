<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping Cart</title>

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <!-- Font Awesome CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

    <style>
        :root {
            --midnight-blue: #1D1E22;
            --space-gray: #3A3B3F;
            --silver: #F5F5F7;
            --alpine-green: #4A5842;
            --gold: #F8D12F;
            --pacific-blue: #007AFF;
            --graphite: #8E8E93;
            --sunrise-pink: #FFC0CB;
            --charcoal-black: #121212;
            --slate-gray: #636366;
            --white: #FFFFFF;
        }

        body {
            background-color: var(--silver);
            font-family: sans-serif;
            color: var(--charcoal-black);
        }

        .card {
            margin: auto;
            max-width: 950px;
            width: 90%;
            box-shadow: 0 6px 20px 0 rgba(0, 0, 0, 0.19);
            border-radius: 1rem;
            border: transparent;
        }

        .cart {
            background-color: var(--white);
            padding: 4vh 5vh;
            border-bottom-left-radius: 1rem;
            border-top-left-radius: 1rem;
        }

        .summary {
            background-color: var(--space-gray);
            border-top-right-radius: 1rem;
            border-bottom-right-radius: 1rem;
            padding: 4vh;
            color: var(--slate-gray);
        }

        .title {
            margin-bottom: 5vh;
        }

        .main {
            padding: 2vh 0;
            width: 100%;
        }

        .img-fluid {
            width: 3.5rem;
        }

        .close {
            font-size: 0.7rem;
        }

        .back-to-shop {
            margin-top: 4.5rem;
            color: var(--pacific-blue);
        }

        .btn {
            background-color: var(--midnight-blue);
            border-color: var(--midnight-blue);
            color: var(--white);
            width: 100%;
            font-size: 0.7rem;
            margin-top: 4vh;
            padding: 1vh;
            border-radius: 0;
        }

        .btn:hover {
            background-color: var(--pacific-blue);
            color: var(--white);
        }

        select,
        input {
            border: 1px solid rgba(0, 0, 0, 0.137);
            padding: 1.5vh 1vh;
            outline: none;
            width: 100%;
            background-color: var(--silver);
            margin-bottom: 4vh;
        }

        .title h4,
        .title .text-muted {
            color: var(--charcoal-black);
        }

        .remove-cart-item {
            color: var(--pacific-blue);
            cursor: pointer;
        }

        .remove-cart-item:hover {
            color: var(--gold);
        }

        /* Responsive Layout */
        @media (max-width: 768px) {
            .cart {
                padding: 2vh 3vh;
            }

            .summary {
                padding: 3vh;
            }

            .btn {
                font-size: 0.8rem;
                padding: 1vh;
            }

            .title h4 {
                font-size: 1.1rem;
            }

            .main .img-fluid {
                width: 4rem;
            }
        }

        /* Small screen adjustments */
        @media (max-width: 576px) {
            .card {
                width: 100%;
            }

            .main .quantity {
                font-size: 0.8rem;
            }
        }
    </style>
</head>

<body>
    <div class="bodyHead p-5">
        <div class="card">
            <div class="row">
                <div class="col-md-8 cart">
                    <div class="title">
                        <div class="row">
                            <div class="col">
                                <h4><b>Shopping Cart</b></h4>
                            </div>
                            <div class="col text-right text-muted">{{products.length}} items</div>
                        </div>
                    </div>

                    {{#if products.length}}
                    <!-- Display the cart items if there are products -->
                    {{#each products}}
                    <div class="row border-top border-bottom">
                        <div class="row main align-items-center">
                            <div class="col-2"><img class="img-fluid" src="{{this.firstImage}}" alt="Product Image">
                            </div>
                            <div class="col">
                                <div class="row text-muted">{{this.category}}</div>
                                <div class="row">{{this.name}}</div>
                            </div>
                            <div class="col">
                                <a class="decrement" data-product-id="{{this._id}}"
                                    data-price="{{this.unitPrice}}">-</a>
                                <span class="border quantity" data-product-id="{{this._id}}">{{this.newQuantity}}</span>
                                <a class="increment" data-product-id="{{this._id}}"
                                    data-price="{{this.unitPrice}}">+</a>
                            </div>
                            <div class="col">₹<span class="item-price">{{this.finalPrice}}</span>
                                <span class="close remove-cart-item" data-product-id="{{this._id}}">&#10005;</span>
                            </div>
                        </div>
                    </div>
                    {{/each}}

                    <div class="back-to-shop"><a href="/shop">&leftarrow;</a><span class="text-muted">Back to
                            shop</span></div>
                    {{else}}
                    <!-- Display a message if the cart is empty -->
                    <div class="">
                        <div class="back-to-shop"><a href="/shop">&leftarrow;</a><span class="text-muted">Back to
                                shop</span></div>
                        <img style="width: 500px;height: 400px;text-align: center"
                            src="https://img.freepik.com/premium-vector/empty-cart_701961-7086.jpg" alt="Cart is Empty">
                    </div>
                    {{/if}}
                </div>

                <div class="col-md-4 summary">
                    {{#if products.length}}
                    <h5><b style="color: #FFFFFF;">Summary</b></h5>
                    <hr>
                    <div class="row">
                        <div class="col" style="color: #FFFFFF;">ITEMS {{products.length}}</div>
                        <div class="col text-right" style="color: #FFFFFF;">Total-Price: ₹<span
                                class="total-price">{{totalPrice}}</span></div>
                    </div>
                    <form>
                        <p style="color: #FFFFFF;">SHIPPING</p>
                        <select>
                            <option value="Standard-Delivery" class="text-muted">Standard-Delivery- ₹5.00</option>
                            <option value="Express-Delivery" class="text-muted">Express-Delivery-₹10.00</option>
                        </select>

                        <p style="color: #FFFFFF;">GIVE CODE</p>
                        <input id="code" placeholder="Enter your code">
                    </form>

                    <button type="button" class="btn btn-primary">Checkout</button>
                    {{/if}}
                </div>
            </div>
        </div>

        <!-- Scripts -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.bundle.min.js"></script>
</body>


<script>
    document.addEventListener("DOMContentLoaded", () => {
        const updateTotalPrice = () => {
            const itemPrices = document.querySelectorAll(".item-price");
            let totalPrice = 0;
            itemPrices.forEach((priceElement) => {
                const itemPrice = parseFloat(priceElement.textContent);
                if (!isNaN(itemPrice)) totalPrice += itemPrice;
            });
            document.querySelector(".total-price").textContent = totalPrice.toFixed(2);
        };

        const updateQuantityOnServer = (productId, quantity, priceElement) => {
            fetch(`/cart/update-quantity/${productId}/${quantity}`, {
                method: "PUT",
                headers: { "Content-Type": "application/json" },
            })
                .then((res) => res.json())
                .then((data) => {
                    if (data.message === "Quantity updated successfully") {
                        priceElement.textContent = data.finalPrice;
                        updateTotalPrice();
                    } else {
                        console.error(data.message);
                    }
                });
        };

        document.querySelectorAll(".main").forEach((item) => {
            const incrementButton = item.querySelector(".increment");
            const decrementButton = item.querySelector(".decrement");
            const quantityElement = item.querySelector(".quantity");
            const priceElement = item.querySelector(".item-price");

            incrementButton.addEventListener("click", () => {
                let quantity = parseInt(quantityElement.textContent);
                quantity++;
                quantityElement.textContent = quantity;
                updateQuantityOnServer(incrementButton.dataset.productId, quantity, priceElement);
            });

            decrementButton.addEventListener("click", () => {
                let quantity = parseInt(quantityElement.textContent);
                if (quantity > 1) {
                    quantity--;
                    quantityElement.textContent = quantity;
                    updateQuantityOnServer(decrementButton.dataset.productId, quantity, priceElement);
                }
            });
        });
    });
    document.addEventListener("DOMContentLoaded", function () {
        const removeButtons = document.querySelectorAll(".remove-cart-item");
        removeButtons.forEach(button => {
            button.addEventListener("click", function () {
                const productId = this.getAttribute("data-product-id");
                fetch(`/cart/remove-cart/${productId}`, {
                    method: "DELETE",
                    headers: {
                        "Content-Type": "application/json",
                    },
                })
                    .then(response => {
                        if (response.ok) {
                            alert("Item removed from cart successfully!");
                            location.reload();
                        } else {
                            alert("Failed to remove item from cart.");
                        }
                    })
                    .catch(error => {
                        console.error("Error removing item from cart:", error);
                    });
            });
        });
    });
    // Checkout functionality
    document.querySelector(".btn").addEventListener("click", function (e) {
        e.preventDefault();

        const offerCode = document.getElementById("code").value.trim();
        const shippingMethod = document.querySelector("select").value.trim();

        if (!["Express-Delivery", "Standard-Delivery"].includes(shippingMethod)) {
            alert("Invalid shipping method. Please select a valid option.");
            return;
        }


        const cartItems = [];
        document.querySelectorAll(".quantity").forEach((quantityElement) => {
            const productId = quantityElement.dataset.productId;
            const quantity = parseInt(quantityElement.textContent.trim(), 10);
            if (productId && !isNaN(quantity)) {
                cartItems.push({ productId, quantity });
            }
        });

        if (cartItems.length === 0) {
            alert("Your cart is empty. Please add items to checkout.");
            return;
        }

        const cartData = {
            offerCode: offerCode || null,
            shippingMethod,
            items: cartItems,
        };

        fetch("/order/checkout", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(cartData),
        })
            .then((response) => response.json())
            .then((data) => {
                if (data.message === "Checkout successful") {
                    alert("Checkout successful! Your order is being processed.");
                    window.location.href = "/order/checkout-summery";
                } else {
                    alert(`Error during checkout: ${data.message}`);
                }
            })
            .catch((err) => {
                console.error("Checkout Error:", err);
                alert("An unexpected error occurred. Please try again later.");
            });
    });

</script>



</html>