<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/elevatezoom/3.0.8/jquery.elevatezoom.min.js"></script>

</head>

<body>

    <!-- Main Product Page -->
    <div class="container product-container">
        <!-- Left Side: Image Slider -->
        <div class="slider">
            <div id="productCarousel" class="carousel slide" data-bs-ride="carousel">
                <div class="carousel-inner">
                    {{#each productImages}}
                    <div class="carousel-item {{#if @first}}active{{/if}}">
                        <img src="{{this}}" class="d-block w-100 zoom-img" alt="{{name}}" data-zoom-image="{{this}}">
                    </div>
                    {{/each}}
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel"
                    data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#productCarousel"
                    data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>

            <!-- Product Description -->
            <div class="product-description">
                <h3>Product Description:</h3>
                <p>{{description}}</p>
            </div>
        </div>

        <!-- Right Side: Product Details -->
        <div class="product-details">
            <div class="product-name">
                <div class="release-date">
                    Release Date: {{releaseDate}}
                </div>
            </div>
            <p class="product-category">Product: {{name}}
                <!-- Wishlist Button (Heart symbol) -->
                <button class="add-to-wishlist-btn" data-product-id="{{this._id}}">
                    <i class="fa fa-heart"></i>
                </button>
            </p>
            <p class="product-category">Category: {{category}}</p>
            <p class="product-stock">Stock: {{stock}} units available</p>
            <h3>Specifications:</h3>
            <ul>
                {{#each specifications}}
                <li><strong>{{this.key}}:</strong> {{this.value}}</li>
                {{/each}}
            </ul>
            <h3>Color </h3>
            <ul>
                {{#each colorOptions}}
                <li>
                    <span
                        style="display:inline-block; width:20px; height:20px; background-color:{{this.colorCode}}; border:1px solid #000; margin-right:5px;"></span>
                    {{this.colorName}}
                </li>
                {{/each}}
            </ul>

            <span>
                <i class="product-price">₹{{price}}</i>
                <b class="product-offer-price">₹{{offerPrice}}</b>
            </span>
            <button class="add-to-cart-btn" style="border-radius: 7px; border: silver 1px; color: green;"
                data-product-id="{{this._id}}">
                Add to Cart
            </button>
        </div>
    </div>

    <!--
    <div class="product-section">
        <div class="container">
            <div class="row product-grid" id="productList">
                {{#each limitedProducts}}
                <div class="col-12 col-md-4 col-lg-3 mb-5 mb-md-0 product-item" data-category="{{this.category}}"
                    data-price="{{#if this.offerPrice}}{{this.offerPrice}}{{else}}{{this.price}}{{/if}}">

                    <a href="/product-view/{{this._id}}">
                        <img src="{{this.productImages}}" class="img-fluid product-thumbnail" alt="{{this.name}}"
                            loading="lazy">


                    </a>
                    <a href="/product-view/{{this._id}}">
                        <h3 class="product-title" style="color: black;">{{this.name}}</h3>
                    </a>
                    <h6 class="product-title" style="color: black;">{{this.category}}</h6>
                    <strong class="product-price">
                        {{#if this.offerPrice}}
                        <span class="product-price-old">₹{{this.offerPrice}}</span>
                        {{else}}
                        ₹{{this.price}}
                        {{/if}}
                    </strong>
                    <button class="add-to-cart-btn" style="border-radius: 7px; border: silver 1px; color: green;"
                        data-product-id="{{this._id}}">
                        Add to Cart
                    </button>

                </div>
                {{/each}}
            </div>
        </div>
    </div>
-->

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>

</body>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const addToCartButtons = document.querySelectorAll(".add-to-cart-btns");

        addToCartButtons.forEach(button => {
            button.addEventListener("click", function () {
                const productId = this.getAttribute("data-product-id");

                fetch(`/cart/addtocart/${productId}`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                })
                    .then(response => response.json().then(data => ({ status: response.status, message: data.message })))
                    .then(({ status, message }) => {
                        if (status === 201) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Added to Cart',
                                text: message,
                                timer: 1500,
                                showConfirmButton: false
                            });
                        } else if (status === 400) {
                            Swal.fire({
                                icon: 'info',
                                title: 'Already in Cart',
                                text: "Item is already in cart.",
                                timer: 1500,
                                showConfirmButton: false
                            });
                        } else if (status === 401) {
                            Swal.fire({
                                icon: 'warning',
                                title: 'Login Required',
                                text: "Please log in to add items to the cart.",
                                confirmButtonText: 'Login',
                            }).then(() => {
                                window.location.href = "/auth/login";
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: "An unexpected error occurred.",
                            });
                        }
                    })
                    .catch(error => {
                        console.error("Error adding to cart:", error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: "An error occurred. Please try again later.",
                        });
                    });
            });
        });
    });
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const addToCartButtons = document.querySelectorAll(".add-to-cart-btn");

        addToCartButtons.forEach(button => {
            button.addEventListener("click", function () {
                const productId = this.getAttribute("data-product-id");

                fetch(`/cart/addtocart/${productId}`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                })
                    .then(response => response.json().then(data => ({ status: response.status, message: data.message })))
                    .then(({ status, message }) => {
                        if (status === 201) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Added to Cart',
                                text: message,
                                timer: 1500,
                                showConfirmButton: false
                            });
                        } else if (status === 400) {
                            Swal.fire({
                                icon: 'info',
                                title: 'Already in Cart',
                                text: "Item is already in cart.",
                                timer: 1500,
                                showConfirmButton: false
                            });
                        } else if (status === 401) {
                            Swal.fire({
                                icon: 'warning',
                                title: 'Login Required',
                                text: "Please log in to add items to the cart.",
                                confirmButtonText: 'Login',
                            }).then(() => {
                                window.location.href = "/auth/login";
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: "An unexpected error occurred.",
                            });
                        }
                    })
                    .catch(error => {
                        console.error("Error adding to cart:", error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: "An error occurred. Please try again later.",
                        });
                    });
            });
        });
    });
</script>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        document.body.addEventListener('click', function (e) {
            const button = e.target.closest('.add-to-wishlist-btn');
            if (button) {
                const productId = button.getAttribute("data-product-id");

                fetch(`/wishlist/addtowishlist/${productId}`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                })
                    .then(response => response.json().then(data => ({ status: response.status, message: data.message })))
                    .then(({ status, message }) => {
                        if (status === 201) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Added to Wishlist',
                                text: message,
                                timer: 1500,
                                showConfirmButton: false
                            });
                        } else if (status === 400) {
                            Swal.fire({
                                icon: 'info',
                                title: 'Already in Wishlist',
                                text: "Product is already in your wishlist.",
                                timer: 1500,
                                showConfirmButton: false
                            });
                        } else if (status === 401) {
                            Swal.fire({
                                icon: 'warning',
                                title: 'Login Required',
                                text: "Please log in to add items to the wishlist.",
                                confirmButtonText: 'Login',
                            }).then(() => {
                                window.location.href = "/auth/login";
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: "An unexpected error occurred.",
                            });
                        }
                    })
                    .catch(error => {
                        console.error("Error adding to wishlist:", error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: "An error occurred. Please try again later.",
                        });
                    });
            }
        });
    });
</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/elevatezoom/3.0.8/jquery.elevatezoom.min.js"></script>

<script>
    $(document).ready(function () {
        $(".zoom-img").elevateZoom({
            zoomType: "lens",
            lensShape: "round",
            lensSize: 200,
            scrollZoom: true,
        });

        $('#productCarousel').on('slid.bs.carousel', function () {
            $(".zoom-img").elevateZoom("destroy");
            $(".carousel-item.active .zoom-img").elevateZoom({
                zoomType: "lens",
                lensShape: "round",
                lensSize: 200,
                scrollZoom: true,
            });
        });
    });
</script>



</html>