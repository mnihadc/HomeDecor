<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/elevatezoom/3.0.8/jquery.elevatezoom.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f7;
            margin: 0;
            padding: 0;
        }

        .product-container {
            padding: 20px;
        }

        /* Image Carousel */
        .carousel-inner img {
            object-fit: contain;
            height: auto;
            max-height: 400px;
            width: 100%;
        }

        /* Product Details */
        .product-details {
            padding: 20px;
            background-color: #ffffff;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .product-name {
            font-size: 2rem;
            font-weight: bold;
            color: #121212;
            margin-bottom: 10px;
        }

        .product-description {
            margin-top: 20px;
            padding: 15px;
            background-color: #f2f2f2;
            border-radius: 8px;
            font-size: 1rem;
            color: #333;
            line-height: 1.5;
        }

        /* Add to Cart Button */
        .add-to-cart-btn {
            background-color: #016516;
            color: white;
            font-size: 1rem;
            border-radius: 8px;
            padding: 10px 15px;
            width: 80%;
        }

        .add-to-cart-btn:hover {
            background-color: #0056b3;
        }

        /* Add to Wishlist Button */
        .add-to-wishlist-btn i {
            font-size: 1.5rem;
            cursor: pointer;
            transition: color 0.3s ease;
            margin-top: 5px;
        }

        .added-to-wishlist i {
            color: red;
        }

        .not-in-wishlist i {
            color: silver;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .product-container {
                padding: 10px;
            }

            .product-name {
                font-size: 1.5rem;
            }

            .product-description {
                font-size: 0.9rem;
            }

            .add-to-cart-btn {
                font-size: 0.9rem;
                padding: 8px 12px;
            }
        }

        @media (max-width: 576px) {
            .carousel-inner img {
                max-height: 300px;
            }

            .product-details {
                padding: 15px;
            }

            .product-description {
                padding: 10px;
            }

            .add-to-cart-btn {
                padding: 8px 10px;
                font-size: 0.8rem;
            }
        }
    </style>
</head>

<body>
    <div class="container-fluid product-container">
        <div class="row g-4">
            <!-- Left Side: Image Slider -->
            <div class="col-lg-6 col-md-12">
                <div id="productCarousel" class="carousel slide" data-bs-ride="carousel">
                    <div class="carousel-inner">
                        {{#each productImages}}
                        <div class="carousel-item {{#if @first}}active{{/if}}">
                            <img src="{{this}}" class="d-block w-100 zoom-img" alt="{{name}}"
                                data-zoom-image="{{this}}">
                        </div>
                        {{/each}}
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel"
                        data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#productCarousel"
                        data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
                <div class="product-description">
                    <h3>Product Description:</h3>
                    <p>{{description}}</p>
                </div>
            </div>

            <!-- Right Side: Product Details -->
            <div class="col-lg-6 col-md-12">
                <div class="product-details">
                    <h3 class="product-name">{{name}}</h3>
                    <p class="release-date">Release Date: {{releaseDate}}</p>
                    <button class="add-to-wishlist-btn mb-3" data-product-id="{{_id}}">
                        {{#if isAddedToWishlist}}
                        <i class="fa fa-heart" style="color: red;"></i>
                        {{else}}
                        <i class="fa fa-heart" style="color: silver;"></i>
                        {{/if}}
                    </button>
                    <p>Category: {{category}}</p>
                    <p>Stock: {{stock}} units available</p>
                    <h3>Specifications:</h3>
                    <ul>
                        {{#each specifications}}
                        <li><strong>{{this.key}}:</strong> {{this.value}}</li>
                        {{/each}}
                    </ul>
                    <h3>Color:</h3>
                    <ul>
                        <li>
                            <span
                                style="display:inline-block; width:20px; height:20px; background-color:{{colorOption.colorCode}}; border:1px solid #000; margin-right:5px;"></span>
                            {{colorOption.colorName}}
                        </li>
                    </ul>
                    <p class="mb-3">Price: <strong class="product-offer-price">₹{{offerPrice}}</strong>
                        <del class="product-price">₹{{price}}</del>
                    </p>
                    <button class="btn btn-success add-to-cart-btn" data-product-id="{{_id}}">
                        Add to Cart
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        $(document).ready(function () {
            // Initialize zoom on active carousel item
            $(".zoom-img").elevateZoom({
                zoomType: "lens",
                lensShape: "round",
                lensSize: 200,
                scrollZoom: true,
            });

            // Reinitialize zoom when carousel changes
            $('#productCarousel').on('slid.bs.carousel', function () {
                $(".zoom-img").elevateZoom("destroy");
                $(".carousel-item.active .zoom-img").elevateZoom({
                    zoomType: "lens",
                    lensShape: "round",
                    lensSize: 200,
                    scrollZoom: true,
                });
            });
        });
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const addToCartButtons = document.querySelectorAll(".add-to-cart-btns");

            addToCartButtons.forEach(button => {
                button.addEventListener("click", function () {
                    const productId = this.getAttribute("data-product-id");

                    fetch(`/cart/addtocart/${productId}`, {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                    })
                        .then(response => response.json().then(data => ({ status: response.status, message: data.message })))
                        .then(({ status, message }) => {
                            if (status === 201) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Added to Cart',
                                    text: message,
                                    timer: 1500,
                                    showConfirmButton: false
                                });
                            } else if (status === 400) {
                                Swal.fire({
                                    icon: 'info',
                                    title: 'Already in Cart',
                                    text: "Item is already in cart.",
                                    timer: 1500,
                                    showConfirmButton: false
                                });
                            } else if (status === 401) {
                                Swal.fire({
                                    icon: 'warning',
                                    title: 'Login Required',
                                    text: "Please log in to add items to the cart.",
                                    confirmButtonText: 'Login',
                                }).then(() => {
                                    window.location.href = "/auth/login";
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: "An unexpected error occurred.",
                                });
                            }
                        })
                        .catch(error => {
                            console.error("Error adding to cart:", error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: "An error occurred. Please try again later.",
                            });
                        });
                });
            });
        });
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const addToCartButtons = document.querySelectorAll(".add-to-cart-btn");

            addToCartButtons.forEach(button => {
                button.addEventListener("click", function () {
                    const productId = this.getAttribute("data-product-id");

                    fetch(`/cart/addtocart/${productId}`, {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                    })
                        .then(response => response.json().then(data => ({ status: response.status, message: data.message })))
                        .then(({ status, message }) => {
                            if (status === 201) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Added to Cart',
                                    text: message,
                                    timer: 1500,
                                    showConfirmButton: false
                                });
                            } else if (status === 400) {
                                Swal.fire({
                                    icon: 'info',
                                    title: 'Already in Cart',
                                    text: "Item is already in cart.",
                                    timer: 1500,
                                    showConfirmButton: false
                                });
                            } else if (status === 401) {
                                Swal.fire({
                                    icon: 'warning',
                                    title: 'Login Required',
                                    text: "Please log in to add items to the cart.",
                                    confirmButtonText: 'Login',
                                }).then(() => {
                                    window.location.href = "/auth/login";
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: "An unexpected error occurred.",
                                });
                            }
                        })
                        .catch(error => {
                            console.error("Error adding to cart:", error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: "An error occurred. Please try again later.",
                            });
                        });
                });
            });
        });
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            document.body.addEventListener('click', function (e) {
                const button = e.target.closest('.add-to-wishlist-btn');
                if (button) {
                    const productId = button.getAttribute("data-product-id");
                    const icon = button.querySelector('i'); // Get the heart icon element

                    fetch(`/wishlist/addtowishlist/${productId}`, {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                    })
                        .then(response => response.json().then(data => ({ status: response.status, message: data.message })))
                        .then(({ status, message }) => {
                            if (status === 201) {
                                // Successfully added to wishlist
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Added to Wishlist',
                                    text: message,
                                    timer: 1500,
                                    showConfirmButton: false
                                });

                                // Change the heart icon to red
                                if (icon) {
                                    icon.classList.remove('fa-heart-o'); // Remove empty heart
                                    icon.classList.add('fa-heart'); // Add filled heart
                                    icon.style.color = 'red'; // Change to red
                                }
                            } else if (status === 400) {
                                // Already in wishlist
                                Swal.fire({
                                    icon: 'info',
                                    title: 'Already in Wishlist',
                                    text: "Product is already in your wishlist.",
                                    timer: 1500,
                                    showConfirmButton: false
                                });
                            } else if (status === 401) {
                                // User not logged in
                                Swal.fire({
                                    icon: 'warning',
                                    title: 'Login Required',
                                    text: "Please log in to add items to the wishlist.",
                                    confirmButtonText: 'Login',
                                }).then(() => {
                                    window.location.href = "/auth/login";
                                });
                            } else {
                                // Handle unexpected errors
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: "An unexpected error occurred.",
                                });
                            }
                        })
                        .catch(error => {
                            console.error("Error adding to wishlist:", error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: "An error occurred. Please try again later.",
                            });
                        });
                }
            });
        });
    </script>


    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/elevatezoom/3.0.8/jquery.elevatezoom.min.js"></script>

</body>

</html>