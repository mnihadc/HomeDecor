<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Addresses</title>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <style>
    /* Scoped Styles Only for this Page */
    .address-page {
      background: linear-gradient(90deg, #1d1e22, #007aff);
      padding-top: 20px;
      /* White for clean background */
      font-family: Arial, sans-serif;
      color: #2C2C2C;
      /* Charcoal for text */
      min-height: 100vh;
    }

    .address-page .card {
      background-color: #F5F5F5;
      /* Light gray for card background */
      border: 1px solid #C0C0C0;
      /* Silver for card borders */
      border-radius: 8px;
      margin-bottom: 20px;
    }

    .address-page .card-header {
      background-color: #001f3f;
      /* Midnight Blue */
      color: #FFFFFF;
      /* White text */
    }

    .address-page .select-btn.active {
      background-color: #007BFF;
      /* Electric Blue */
      color: #FFFFFF;
      /* White text */
      border-color: #007BFF;
      /* Match button color */
    }

    .address-page .card.selected {
      border: 4px solid #FFD700;
      /* Gold border for selected card */
      background-color: #FFF9E6;
      /* Subtle gold-tinted background */
    }

    .footer {
      background-color: #001f3f;
      /* Midnight Blue */
      color: #C0C0C0;
      /* Silver text */
    }
  </style>
</head>

<body>
  <div class="address-page">
    <div style="display: flex;justify-content: end;padding-right: 2rem;padding-top: 5px;">
      <a href="/address/get-create-address">
        <button type="button" class="btn btn-success">Create Address</button>
      </a>
    </div>
    <div class="container">
      <div class="card-columns">
        {{#each addresses}}
        <div class="p-2">
          <div class="card {{#if this.select}}selected{{/if}}" data-id="{{this._id}}">
            <div class="card-header">{{this.fullName}}</div>
            <div class="card-body">
              <p><strong>Email:</strong> {{this.email}}</p>
              <p><strong>Gender:</strong> {{this.gender}}</p>
              <p><strong>Date of Birth:</strong> {{this.dob}}</p>
              <p><strong>Phone:</strong> {{this.phone}}</p>
              <p><strong>Address:</strong> {{this.address}}</p>
              <p><strong>City:</strong> {{this.city}}</p>
              <p><strong>District:</strong> {{this.district}}</p>
              <p><strong>State:</strong> {{this.state}}</p>
              <p><strong>Postal Code:</strong> {{this.postalCode}}</p>
              <button class="btn btn-outline-success select-btn {{#if this.select}}active{{/if}}"
                onclick="selectAddress(this)">
                {{#if this.select}}Selected{{else}}Select{{/if}}
              </button>
            </div>
          </div>
        </div>
        {{/each}}
      </div>
    </div>
  </div>

  <footer class="footer">
    <p>&copy; 2024 Address Management | All Rights Reserved</p>
  </footer>

  <script>
    function selectAddress(button) {
      document.querySelectorAll('.card').forEach(c => {
        c.classList.remove('selected');
        c.querySelector('.select-btn').classList.remove('active');
        c.querySelector('.select-btn').textContent = "Select";
      });

      const card = button.closest('.card');
      card.classList.add('selected');
      button.classList.add('active');
      button.textContent = "Selected";

      const addressId = card.getAttribute('data-id');

      fetch('/address/selected-address', {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ addressId: addressId })
      })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            Swal.fire({
              icon: 'success',
              title: 'Success',
              text: 'Address selection updated successfully!',
              timer: 2000,
              showConfirmButton: false
            });
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'Address selection failed. Please try again.'
            });
          }
        })
        .catch(error => {
          console.error("Error:", error);
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An unexpected error occurred. Please try again.'
          });
        });
    }
  </script>


</body>

</html>