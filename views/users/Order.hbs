<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Receipt</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
    <style>
        .gradient-custom {
            background: linear-gradient(to top left, rgba(29, 30, 34, 1), rgba(246, 243, 255, 1));
            /* Midnight Blue to Silver */
        }

        .card-footer {
            background-color: #3A3B3F !important;
            /* Space Gray */
            border-bottom-left-radius: 10px !important;
            border-bottom-right-radius: 10px !important;
        }

        .card-footer h5 {
            font-weight: bold;
            color: #F5F5F7;
            /* Silver */
        }

        .text-highlight {
            color: #007AFF !important;
            /* Pacific Blue */
        }

        .payment-btn {
            background-color: #F8D12F;
            /* Gold */
            color: #FFFFFF;
            padding: 10px 20px;
            text-decoration: none;
            border-radius: 5px;
        }

        .progress-bar {
            background-color: #4A5842 !important;
            /* Alpine Green */
        }

        .progress-bar-container {
            margin-top: 15px;
        }

        .progress-bar .progress-bar {
            background-color: #007AFF !important;
            /* Pacific Blue */
        }

        .text-muted {
            color: #636366 !important;
            /* Slate Gray */
        }
    </style>
</head>

<body>
    {{#if orders}}
    {{#each orders}}
    <section class="h-100 gradient-custom" style="background-color: {{#if isDelivered}}red{{else}}#f8f9fa{{/if}};">
        <div class="container py-5">
            <div class="row justify-content-center align-items-center">
                <div class="col-lg-10 col-xl-8">
                    <div class="card border-0 {{#if isDelivered}}bg-green{{/if}}" style="border-radius: 10px;">
                        <!-- Header -->
                        <div class="card-header bg-light px-4 py-4">
                            <h5 class="text-muted mb-0">
                                Thanks for your order, <span class="text-highlight">{{users.username}}</span>!
                            </h5>
                        </div>

                        <!-- Body -->
                        <div class="card-body p-4">
                            <div class="d-flex justify-content-between align-items-center mb-4">
                                <p class="lead fw-normal text-highlight mb-0">Receipt</p>
                                <p class="small text-muted mb-0">Receipt Voucher: <strong>{{_id}}</strong></p>
                            </div>
                            <div class="d-flex align-items-center">
                                <p class="text-muted small mb-0 me-3">Track Order</p>
                                <div class="progress w-100" style="height: 6px;">
                                    <div class="progress-bar" role="progressbar" style="width: {{progress}}%;"
                                        aria-valuenow="{{progress}}" aria-valuemin="0" aria-valuemax="100"></div>
                                </div>
                                <p class="text-muted small ms-3">{{#if isDelivered}} <span
                                        style="color: silver; background: green;padding: 5px; border-radius: 5px;">
                                        Delivered</span>{{else}}In
                                    Progress{{/if}}
                                </p>
                            </div>

                            <div class="d-flex justify-content-between">
                                <p class="text-muted mb-0">Delivery Date: <strong>{{deliveryDate}}</strong></p>
                            </div>
                            <hr class="mt-2">

                            <!-- Loop through items -->
                            {{#each items}}
                            <div class="card shadow-sm border-0 mb-4">
                                <div class="card-body">
                                    <div class="row g-3">
                                        <div class="col-md-2 text-center">
                                            <img src="{{product.image}}" class="img-fluid" alt="{{product.name}}">
                                        </div>
                                        <div class="col-md-10">
                                            <div class="d-flex justify-content-between">
                                                <p class="mb-1"><strong>{{product.name}}</strong></p>
                                                <p class="text-muted small">Qty: {{quantity}}</p>
                                            </div>
                                            <p class="text-muted small mb-1">Color: {{product.specifications.color}}</p>
                                            <p class="text-muted small mb-1">Capacity:
                                                {{product.specifications.capacity}}</p>
                                            <p class="text-muted small"><strong>₹{{product.price}}</strong></p>
                                            <hr class="mt-2">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            {{/each}}

                            <div class="mb-4">
                                <h5 class="text-muted mb-0">Delivery Address</h5>
                                <h6 class="ml-3"><b>{{address.fullName}}</b></h6>
                                <p class="text-muted small mb-1 ml-4"><strong>{{address.address}}</strong></p>
                                <p class="text-muted small mb-1 ml-4"><strong>{{address.city}},
                                        {{address.postalCode}}</strong></p>
                                <p class="text-muted small mb-1 ml-4"><strong>{{address.state}},
                                        {{address.district}}</strong></p>
                                <p class="text-muted small mb-1 ml-4"><strong>{{address.phone}}, email :
                                        {{address.email}}</strong></p>
                            </div>

                            <!-- Summary -->
                            <div class="d-flex justify-content-between pt-2">
                                <p class="fw-bold mb-0">Order Details</p>
                                <p class="text-muted mb-0"><span class="fw-bold">Total</span> ₹{{totalPrice}}</p>
                            </div>
                            <div class="d-flex justify-content-between pt-2">
                                <p class="text-muted mb-0"><strong>Payment-option</strong></p>
                                <p class="text-muted mb-0"><span class="fw-bold">{{paymentOption}}</p>
                            </div>
                            <div class="d-flex justify-content-between pt-2">
                                <p class="text-muted mb-0">Invoice Number: <strong>{{_id}}</strong></p>
                                <p class="text-muted mb-0"><span class="fw-bold">Discount</span> ₹{{discount}}</p>
                            </div>
                            <div class="d-flex justify-content-between">
                                <p class="text-muted mb-0">Invoice Date: <strong>{{createdAt}}</strong></p>
                                <p class="text-muted mb-0"><span class="fw-bold">GST 18%</span></p>
                            </div>
                            <div class="d-flex justify-content-between mb-5">
                                <p class="text-muted mb-0">Receipts Voucher: <strong>{{offerCode}}</strong></p>
                                <p class="text-muted mb-0"><span class="fw-bold">Delivery Charges</span> Free</p>
                            </div>

                            <div class="p-2 d-flex justify-content-between">
                                {{#if paymentStatus}}
                                <span class="badge bg-success" style="padding-top: 11px;">Payment Completed</span>
                                {{else}} <a href="#" class="btn btn-primary"
                                    onclick="initiatePayment('{{_id}}')">Proceed to
                                    payment</a>
                                {{/if}}
                                <a href="#" class="btn btn-secondary" onclick="cancelOrder('{{_id}}')">Cancel Order</a>


                            </div>

                            <!-- Footer -->
                            <div class="card-footer d-flex justify-content-between align-items-center px-4 py-4">
                                <h5 class="text-white mb-0">Total Paid: <span class="h2 mb-0">₹{{totalPrice}}</span>
                                </h5>
                                <a href="#" class="btn btn-success" onclick="downloadInvoice('{{_id}}')">Download
                                    Invoice</a>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    {{/each}}
    {{else}}
    <section class="h-100 gradient-custom">
        <div class="container py-5 text-center">
            <h3>No orders found</h3>
            <p>Looks like you haven't placed any orders yet.</p>
            <a href="/shop" class="btn btn-primary">Go to Shop</a>
        </div>
    </section>
    {{/if}}

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
<script>
    function initiatePayment(orderId) {
        fetch(`/order/initiate-payment-order/${orderId}`, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({ orderId: orderId }),
        })
            .then((response) => response.json())
            .then((data) => {
                if (data.url) {
                    window.location.href = data.url; // Redirect to payment gateway
                } else {
                    Swal.fire({
                        icon: "error",
                        title: "Payment Failed",
                        text: "Failed to initiate payment. Please try again.",
                    });
                }
            })
            .catch((error) => {
                console.error("Error initiating payment:", error);
                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: "An unexpected error occurred. Please try again later.",
                });
            });
    }
</script>
<script>
    function refundOrder(orderId) {
        Swal.fire({
            title: "Are you sure?",
            text: "This will initiate a refund request for your payment.",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Yes, refund it!",
            cancelButtonText: "No, keep it",
        }).then(async (result) => {
            if (result.isConfirmed) {
                Swal.fire({
                    title: "Processing...",
                    text: "Please wait while we process your refund request.",
                    allowOutsideClick: false,
                    showConfirmButton: false,
                    willOpen: () => {
                        Swal.showLoading();
                    },
                });

                try {
                    const response = await fetch(`/order/refund/${orderId}`, {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                    });

                    if (response.ok) {
                        const data = await response.json();
                        Swal.fire({
                            icon: "success",
                            title: "Refund Processed",
                            text: data.message || "Your refund request has been processed successfully.",
                        }).then(() => {
                            window.location.reload();
                        });
                    } else {
                        const errorData = await response.json();
                        Swal.fire({
                            icon: "error",
                            title: "Refund Failed",
                            text: errorData.message || "Failed to process the refund. Please try again.",
                        });
                    }
                } catch (error) {
                    console.error("Error processing refund:", error);
                    Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: "An error occurred. Please try again later.",
                    });
                }
            }
        });
    }

</script>
<script>
    async function cancelOrder(orderId) {
        Swal.fire({
            title: "Are you sure?",
            text: "This action will cancel your order.",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Yes, cancel it!",
            cancelButtonText: "No, keep it",
        }).then(async (result) => {
            if (result.isConfirmed) {
                Swal.fire({
                    title: "Processing...",
                    text: "Please wait while we cancel your order.",
                    allowOutsideClick: false,
                    showConfirmButton: false,
                    willOpen: () => {
                        Swal.showLoading();
                    },
                });

                try {
                    const response = await fetch(`/order/cancel-order/${orderId}`, {
                        method: "POST", // Or "DELETE" based on your API design
                        headers: {
                            "Content-Type": "application/json",
                            // 'X-CSRF-Token': '<YOUR_CSRF_TOKEN>' // Uncomment if needed
                        },
                    });

                    if (response.ok) {
                        Swal.fire({
                            icon: "success",
                            title: "Order Canceled",
                            text: "Your order has been canceled successfully.",
                        }).then(() => {
                            window.location.href = "/shop";
                        });
                    } else {
                        const errorData = await response.json();
                        Swal.fire({
                            icon: "error",
                            title: "Cancellation Failed",
                            text: errorData.message || "Failed to cancel the order. Please try again.",
                        });
                    }
                } catch (error) {
                    console.error("Error canceling order:", error);
                    Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: "An error occurred. Please try again later.",
                    });
                }
            }
        });
    }
</script>

<script>
    function downloadInvoice(orderId) {
        fetch(`/order/download-invoice/${orderId}`, {
            method: "GET",
            headers: {
                "Accept": "application/pdf",
            },
        })
            .then((response) => {
                if (!response.ok) {
                    throw new Error("Failed to fetch the invoice.");
                }
                return response.blob();
            })
            .then((blob) => {
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement("a");
                a.style.display = "none";
                a.href = url;
                a.download = `invoice_${orderId}.pdf`;
                document.body.appendChild(a);
                a.click();
                window.URL.revokeObjectURL(url);

                Swal.fire({
                    icon: "success",
                    title: "Invoice Downloaded",
                    text: "Your invoice has been downloaded successfully.",
                });
            })
            .catch((error) => {
                console.error("Error downloading invoice:", error);
                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: "An error occurred while downloading the invoice. Please try again.",
                });
            });
    }
</script>

</html>