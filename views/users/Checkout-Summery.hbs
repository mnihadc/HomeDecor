<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cart Page</title>
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        :root {
            --midnight-blue: #1D1E22;
            --space-gray: #3A3B3F;
            --silver: #F5F5F7;
            --alpine-green: #4A5842;
            --gold: #F8D12F;
            --pacific-blue: #007AFF;
            --graphite: #8E8E93;
            --sunrise-pink: #FFC0CB;
            --charcoal-black: #121212;
            --slate-gray: #636366;
            --white: #FFFFFF;
        }

        .bodyHead {
            margin-top: 20px;
            background: var(--silver);
        }

        .cart-item {
            position: relative;
            margin-bottom: 20px;
            padding: 15px;
            background-color: var(--white);
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        .cart-item .cart-item-product {
            display: flex;
            align-items: center;
        }

        .cart-item .cart-item-product-thumb {
            width: 90px;
            margin-right: 15px;
        }

        .cart-item .cart-item-product-thumb img {
            width: 100%;
            border-radius: 8px;
        }

        .cart-item .cart-item-product-info {
            flex: 1;
        }

        .cart-item .cart-item-label {
            font-weight: 600;
            color: var(--slate-gray);
        }

        .count-input select {
            width: 100px;
        }

        .remove-item {
            position: absolute;
            top: -10px;
            right: -10px;
            width: 24px;
            height: 24px;
            background-color: var(--gold);
            color: var(--white);
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            box-shadow: 0 3px 8px rgba(255, 82, 82, 0.5);
        }

        .remove-item i {
            font-size: 14px;
        }

        .cart-summary {
            text-align: center;
        }

        .cart-summary .btn {
            width: 100%;
            padding: 12px;
        }

        .btn-primary {
            background-color: var(--midnight-blue);
            border-color: var(--midnight-blue);
            color: var(--white);
        }

        .btn-primary:hover {
            background-color: var(--pacific-blue);
            border-color: var(--pacific-blue);
        }

        .btn-secondary {
            background-color: var(--space-gray);
            border-color: var(--space-gray);
            color: var(--silver);
        }

        .btn-secondary:hover {
            background-color: var(--graphite);
            border-color: var(--graphite);
        }

        @media (max-width: 768px) {
            .cart-item {
                padding: 10px;
                display: block;
            }

            .cart-item .cart-item-product {
                display: block;
                text-align: center;
            }

            .cart-item .cart-item-product-thumb {
                width: 80px;
                margin: 0 auto 10px;
            }

            .cart-item .cart-item-product-info {
                text-align: center;
            }

            .cart-item-label {
                text-align: center;
                margin-bottom: 10px;
            }

            .cart-summary {
                margin-top: 30px;
            }
        }

        @media (max-width: 576px) {
            .cart-summary {
                margin-top: 15px;
            }
        }

        :root {
            --midnight-blue: #1D1E22;
            --space-gray: #3A3B3F;
            --silver: #F5F5F7;
            --alpine-green: #4A5842;
            --gold: #F8D12F;
            --pacific-blue: #007AFF;
            --graphite: #8E8E93;
            --sunrise-pink: #FFC0CB;
            --charcoal-black: #121212;
            --slate-gray: #636366;
            --white: #FFFFFF;
        }

        .bodyHead {
            margin-top: 20px;
            background: var(--silver);
        }

        .cart-summary .btn {
            width: 100%;
            padding: 12px;
        }

        .btn-primary {
            background-color: var(--midnight-blue);
            border-color: var(--midnight-blue);
            color: var(--white);
        }

        .btn-primary:hover {
            background-color: var(--pacific-blue);
            border-color: var(--pacific-blue);
        }

        .btn-secondary {
            background-color: var(--space-gray);
            border-color: var(--space-gray);
            color: var(--silver);
        }

        .btn-secondary:hover {
            background-color: var(--graphite);
            border-color: var(--graphite);
        }

        .popup {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: var(--white);
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
            z-index: 1000;
            width: 100%;
            max-width: 500px;
        }

        .popup-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .popup-header h5 {
            margin: 0;
        }

        .popup-backdrop {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 999;
        }

        @media (max-width: 768px) {
            .address-data {
                display: block;
                text-align: left;
            }
        }

        @media (min-width: 769px) {
            .address-data {
                display: flex;
                justify-content: space-between;
            }
        }
    </style>
</head>

<body>
    <div class="container p-2">
        <h1 class="mt-4 text-center" style="color: var(--midnight-blue);">Checkout Summary</h1>

        <!-- User Information -->
        {{#if user}}
        <div class="alert alert-info">
            Logged in as: <strong>{{user.email}}</strong>
        </div>
        {{/if}}

        <!-- Checkout Items -->
        <div class="mt-4">
            <h3 style="color: var(--charcoal-black);">Order Details</h3>
            {{#if checkout.items.length}}
            <div class="list-group">
                {{#each checkout.items}}
                <div class="list-group-item">
                    <div class="row align-items-center">
                        <div class="col-md-2">
                            <img src="{{this.product.image}}" alt="{{this.product.name}}" class="img-fluid rounded">
                        </div>
                        <div class="col-md-5">
                            <h5 style="color: var(--charcoal-black);">{{this.product.name}}</h5>
                            <p style="color: var(--slate-gray);">
                                <strong>Category:</strong> {{this.product.category}}<br>
                                <strong>Battery:</strong> {{this.product.battery}}<br>
                                <strong>Price:</strong> ₹{{this.product.price}}
                            </p>
                        </div>

                        <div class="col-md-2 text-center">
                            <strong>Color:</strong>
                            <ul class="list-unstyled mb-0">
                                {{#each this.product.colorOptions}}
                                <li style="color: var(--graphite);">
                                    {{this.colorName}} ({{this.colorCode}})
                                </li>
                                {{/each}}
                            </ul>
                            <p><strong>Quantity:</strong> {{this.quantity}}</p>
                        </div>
                        <div class="col-md-3 text-right">
                            <h5 style="color: var(--midnight-blue);">Subtotal: ₹{{this.itemTotalPrice}}</h5>
                        </div>
                    </div>
                </div>
                {{/each}}
            </div>
            {{else}}
            <p>No items found in the checkout summary.</p>
            {{/if}}
        </div>
        <div class="mt-4" style="text-align: center;">
            <h3 style="color: var(--charcoal-black);">Shipping Address</h3>
            {{#if checkout.address}}
            <div class="address-card">
                <div class="address-header">
                    <h4> {{checkout.address.fullName}}</h4>
                </div>
                <div class="address-details">
                    <p><strong>Email:</strong> {{checkout.address.email}}</p>
                    <p><strong>Phone:</strong> {{checkout.address.phone}}</p>
                    <p><strong>Address:</strong> {{checkout.address.address}}, {{checkout.address.city}},
                        {{checkout.address.district}}, {{checkout.address.state}},
                        {{checkout.address.postalCode}}</p>
                    <p><strong>Gender:</strong> {{checkout.address.gender}}</p>
                    <p><strong>DOB:</strong> {{checkout.address.dob}}</p>
                </div>
            </div>
            <button class="btn btn-secondary mt-3" onclick="showPopup()">Change Address</button>
            {{/if}}
        </div>

        <!-- Popup -->
        <div class="popup" id="addressPopup">
            <div class="popup-header">
                <h5>Select a New Address</h5>
                <button class="btn btn-sm btn-danger" onclick="hidePopup()">Close</button>
            </div>
            <hr>
            {{#if checkout.addresses.length}}
            <table class="table table-striped table-responsive">
                <thead>
                    <tr>
                        <th>Full Name</th>
                        <th>Address</th>
                        <th>City</th>
                        <th>State</th>
                        <th>Postal Code</th>
                        <th>Phone</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {{#each checkout.addresses}}
                    <tr>
                        <td>{{this.fullName}}</td>
                        <td>{{this.address}}</td>
                        <td>{{this.city}}</td>
                        <td>{{this.state}}</td>
                        <td>{{this.postalCode}}</td>
                        <td>{{this.phone}}</td>
                        <td>
                            <button class="btn btn-info" data-address-id="{{this._id}}">Select</button>

                        </td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
            {{else}}
            <p>No other addresses available.</p>
            <button class="btn btn-primary" data-address-id="{{this.addressId}}"
                data-order-id="{{checkout._id}}">Select</button {{/if}} </div>
            <div class="popup-backdrop" id="popupBackdrop"></div>


            <!-- Order Summary -->
            <div class="mt-4">
                <h3 style="color: var(--charcoal-black);">Order Summary</h3>
                <ul class="list-group">
                    <li class="list-group-item d-flex justify-content-between" style="color: var(--slate-gray);">
                        <span>Subtotal:</span>
                        <strong>₹{{checkout.totalPrice}}</strong>
                    </li>
                    {{#if checkout.discount}}
                    <li class="list-group-item d-flex justify-content-between" style="color: var(--slate-gray);">
                        <span>Discount:</span>
                        <strong>-₹{{checkout.discount}}</strong>
                    </li>
                    {{/if}}
                    <li class="list-group-item d-flex justify-content-between" style="color: var(--slate-gray);">
                        <span><strong>Payment-Option</strong></span>
                        <strong>
                            <div class="mt-3">
                                <h5 style="color: var(--charcoal-black);">Select Payment Method</h5>
                                <select class="form-control" id="paymentOptionSelect">
                                    <option value="CashOnDelivery">Cash on Delivery</option>
                                    <option value="Upi">UPI Payment</option>
                                </select>
                            </div>
                        </strong>
                    </li>
                    <li class="list-group-item d-flex justify-content-between" style="color: var(--midnight-blue);">
                        <span>Total:</span>
                        <strong>₹{{checkout.totalPrice}}</strong>
                    </li>
                </ul>
            </div>

            <!-- Offer Code -->
            {{#if checkout.offerCode}}
            <div class="mt-3">
                <p><strong>Applied Offer Code:</strong> {{checkout.offerCode}}</p>
            </div>
            {{/if}}

            <!-- Navigation Buttons -->
            <div class="mt-4 d-flex justify-content-between">
                <a href="#" class="btn btn-secondary" onclick="cancelOrder('{{checkout._id}}')">Cancel Order</a>
                <button class="btn btn-primary" id="confirmOrderBtn">Confirm Order</button>
            </div>
        </div>

        <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
<script>
    function cancelOrder(orderId) {
        if (confirm("Are you sure you want to cancel this order?")) {
            fetch(`/order/cancel-order/${orderId}`, {
                method: "POST",
            })
                .then((response) => {
                    if (response.ok) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Order Canceled',
                            text: 'Your order has been canceled successfully.',
                            confirmButtonText: 'Okay',
                        }).then(() => {
                            window.location.href = "/shop";
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Cancel Failed',
                            text: 'Failed to cancel the order. Please try again.',
                            confirmButtonText: 'Try Again',
                        });
                    }
                })
                .catch((error) => {
                    console.error("Error canceling order:", error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred. Please try again.',
                        confirmButtonText: 'Okay',
                    });
                });
        }
    }
</script>

<script>
    document.getElementById('confirmOrderBtn').addEventListener('click', function () {
        const paymentOption = document.getElementById('paymentOptionSelect').value;  // Get selected payment option
        const orderId = "{{checkout._id}}"; // Fetch dynamically generated order ID

        if (!orderId) {
            Swal.fire({
                icon: 'error',
                title: 'Order ID Missing',
                text: 'Order ID is missing. Please try again.',
                confirmButtonText: 'Okay',
            });
            return;
        }

        if (paymentOption === 'CashOnDelivery') {
            confirmOrderCOD(orderId);
        } else if (paymentOption === 'Upi') {
            initiateUPIPayment(orderId);
        } else {
            Swal.fire({
                icon: 'warning',
                title: 'Invalid Payment Method',
                text: 'Please select a valid payment method.',
                confirmButtonText: 'Okay',
            });
        }
    });

    function confirmOrderCOD(orderId) {
        fetch("/order/confirm-cod-order", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ orderId }),
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Order Confirmed',
                        text: data.message,
                        confirmButtonText: 'Proceed',
                    }).then(() => {
                        window.location.href = `/order/success?userId=${data.userId}&orderId=${data.orderId}`;
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Order Confirmation Failed',
                        text: 'Failed to confirm the order. Please try again.',
                        confirmButtonText: 'Try Again',
                    });
                }
            })
            .catch(error => {
                console.error("Error confirming COD order:", error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred. Please try again later.',
                    confirmButtonText: 'Okay',
                });
            });
    }

    function initiateUPIPayment(orderId) {
        fetch("/order/initiate-payment", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ orderId })
        })
            .then(response => response.json())
            .then(data => {
                if (data.url) {
                    window.location.href = data.url; // Redirect to Stripe or UPI payment gateway
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Payment Failed',
                        text: 'Failed to initiate payment.',
                        confirmButtonText: 'Try Again',
                    });
                }
            })
            .catch(error => {
                console.error("Error initiating payment:", error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred. Please try again later.',
                    confirmButtonText: 'Okay',
                });
            });
    }
</script>

<script>
    function showPopup() {
        document.getElementById('addressPopup').style.display = 'block';
        document.getElementById('popupBackdrop').style.display = 'block';
    }

    function hidePopup() {
        document.getElementById('addressPopup').style.display = 'none';
        document.getElementById('popupBackdrop').style.display = 'none';
    }
</script>

<script>
    $(document).on('click', '.btn-info', function () {
        var addressId = $(this).data('address-id');
        var orderId = '{{ checkout._id }}';  // Get the orderId directly from the template

        if (addressId && orderId) {
            selectAddress(addressId, orderId);
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Invalid Input',
                text: 'Invalid address or order ID.',
                confirmButtonText: 'Okay',
            });
        }
    });

    function selectAddress(addressId, orderId) {
        fetch("/order/update-order-address", {
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({ orderId: orderId, addressId: addressId }),
        })
            .then((response) => response.json())
            .then((data) => {
                if (data.message) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Address Updated',
                        text: data.message,
                        confirmButtonText: 'Okay',
                    }).then(() => {
                        hidePopup();  // Hide the popup after successful address change
                        window.location.reload();  // Reload the page to reflect the new address
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Update Failed',
                        text: 'Failed to update address',
                        confirmButtonText: 'Try Again',
                    });
                }
            })
            .catch((error) => {
                console.error("Error updating address:", error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred while updating the address',
                    confirmButtonText: 'Okay',
                });
            });
    }

</script>


</html>