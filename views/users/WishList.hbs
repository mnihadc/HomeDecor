<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Wishlist</title>
</head>

<body>
    <div class="container">
        <h1>My Wishlist</h1>
        <div class="wishlist">
            {{#if items.length}}
            {{#each items}}
            <div class="wishlist-item">
                <a href="/product-view/{{this._id}}">
                    <img src="{{this.firstProductImage}}" class="img-fluid product-thumbnail" alt="{{this.name}}">
                </a>
                <div class="wishlist-item-details">
                    <div class="wishlist-item-title">{{name}}</div>
                    <div class="wishlist-item-category">Category: {{category}}</div>
                    <div class="wishlist-item-price">
                        <span>${{price}}</span>
                        {{#if offerPrice}}<del>${{offerPrice}}</del>{{/if}}
                    </div>
                    <div class="wishlist-item-color">
                        <p>Color:</p>
                        <ul>
                            {{#if colorCode}}
                            <li>
                                <span
                                    style="display:inline-block; width:20px; height:20px; background-color:{{colorCode}}; border:1px solid #000; margin-right:5px;"></span>
                                {{colorName}}
                            </li>
                            {{else}}
                            <p>No color information available</p>
                            {{/if}}
                        </ul>
                    </div>

                    <div class="wishlist-item-time">Added on: {{createdTime}}</div>
                    <button class="add-to-cart" data-product-id="{{this._id}}">Add to Cart</button>
                    <button class="remove-from-wishlist" data-product-id="{{this._id}}">Remove </button>
                </div>
            </div>

            {{/each}}
            {{else}}
            <p>Your wishlist is empty!</p>
            {{/if}}
        </div>
    </div>
</body>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const wishlistContainer = document.querySelector('.wishlist'); // Correct selector for the wishlist container

        // Attach event listener to the parent container
        wishlistContainer.addEventListener('click', function (e) {
            // Check if the clicked element is a "Add to Cart" button
            if (e.target && e.target.classList.contains('add-to-cart')) {
                const productId = e.target.getAttribute("data-product-id");

                fetch(`/cart/addtocart/${productId}`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                })
                    .then(response => response.json().then(data => ({ status: response.status, message: data.message })))
                    .then(({ status, message }) => {
                        if (status === 201) {
                            Swal.fire({
                                icon: "success",
                                title: "Success!",
                                text: "Item successfully added to the cart.",
                                confirmButtonText: "OK",
                            });
                        } else if (status === 400) {
                            Swal.fire({
                                icon: "info",
                                title: "Already in Cart",
                                text: "Item is already in the cart.",
                                confirmButtonText: "Got it",
                            });
                        } else if (status === 401) {
                            Swal.fire({
                                icon: "warning",
                                title: "Login Required",
                                text: "Please log in to add items to the cart.",
                                confirmButtonText: "Login Now",
                            }).then(() => {
                                window.location.href = "/auth/login";
                            });
                        } else {
                            Swal.fire({
                                icon: "error",
                                title: "Error!",
                                text: "An unexpected error occurred. Please try again.",
                                confirmButtonText: "OK",
                            });
                        }
                    })
                    .catch(error => {
                        console.error("Error adding to cart:", error);
                        Swal.fire({
                            icon: "error",
                            title: "Oops...",
                            text: "An error occurred. Please try again later.",
                            confirmButtonText: "OK",
                        });
                    });
            }

            // Handle "Remove from Wishlist" button click
            if (e.target && e.target.classList.contains('remove-from-wishlist')) {
                const productId = e.target.getAttribute("data-product-id");
                const wishlistItem = e.target.closest('.wishlist-item'); // Find the closest wishlist item container

                // Show a confirmation dialog before removing
                Swal.fire({
                    icon: "question",
                    title: "Are you sure?",
                    text: "Do you want to remove this item from your wishlist?",
                    showCancelButton: true,
                    confirmButtonText: "Yes, remove it",
                    cancelButtonText: "Cancel",
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Make a DELETE request to remove from wishlist
                        fetch(`/wishlist/remove/${productId}`, {
                            method: "DELETE",
                            headers: {
                                "Content-Type": "application/json",
                            },
                        })
                            .then(response =>
                                response.json().then(data => ({ status: response.status, message: data.message }))
                            )
                            .then(({ status, message }) => {
                                if (status === 200) {
                                    Swal.fire({
                                        icon: "success",
                                        title: "Removed!",
                                        text: message,
                                        confirmButtonText: "OK",
                                    });
                                    wishlistItem.remove(); // Remove item from the DOM if successful
                                } else {
                                    Swal.fire({
                                        icon: "error",
                                        title: "Failed",
                                        text: "Failed to remove item from wishlist.",
                                        confirmButtonText: "OK",
                                    });
                                }
                            })
                            .catch(error => {
                                console.error("Error removing item from wishlist:", error);
                                Swal.fire({
                                    icon: "error",
                                    title: "Oops...",
                                    text: "An error occurred while removing the item. Please try again later.",
                                    confirmButtonText: "OK",
                                });
                            });
                    }
                });
            }
        });
    });
</script>



</html>